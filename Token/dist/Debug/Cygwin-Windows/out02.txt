! (32,10)
"      %d               %d\n" (45,11)
"      %d              %d\n" (43,11)
"    %d\n" (83,12)
"    0\n" (81,12)
"%d" (34,17)(35,17)(54,11)
"DS9427136.txt" (97,20)
"Welcome!\n" (19,9)
"\nenter time \n" (40,10)
"average waiting time of a customer :%f\n" (98,16)
"avrerage  %f\n" (92,9)
"enter teller :" (53,12)
"error\n" (27,10)
"please input file name : " (20,9)
"r" (23,22)
"the amount of work done by %d teller is :%d\n" (100,17)
"w" (97,37)
"wait time\n" (67,10)
# (1,1)(2,1)
& (34,22)(35,22)(54,16)
( (4,9)(7,6)(19,8)(20,8)(22,9)(23,15)(25,4)(27,9)(32,8)(32,15)(34,10)(35,10)(40,9)(41,5)(42,5)(43,10)(45,10)(53,11)(54,10)(55,7)(57,6)(62,6)(67,9)(68,6)(70,7)(72,7)(80,6)(81,11)(83,11)(92,8)(97,18)(98,9)(99,5)(100,10)(101,8)(102,8)
) (4,10)(7,24)(19,21)(20,36)(22,15)(23,25)(25,17)(27,19)(32,21)(32,22)(34,36)(35,35)(40,27)(41,27)(42,21)(43,66)(45,67)(53,28)(54,26)(55,30)(57,26)(62,26)(67,23)(68,34)(70,27)(72,31)(80,17)(81,21)(83,31)(92,33)(97,41)(98,66)(99,25)(100,78)(101,14)(102,14)
* (17,7)(96,7)
+ (65,37)(78,33)(79,24)(84,36)(100,66)
++ (7,22)(36,5)(41,25)(57,24)(62,24)(68,32)(70,25)(99,23)
, (6,19)(6,31)(6,42)(6,58)(6,73)(6,78)(23,21)(34,16)(34,21)(35,16)(35,21)(43,39)(43,53)(45,40)(45,54)(50,15)(50,19)(50,37)(54,15)(83,22)(92,25)(97,35)(98,15)(98,58)(100,16)(100,64)(100,68)
- (38,16)(79,42)
. (1,15)(2,18)
/ (91,20)
0 (6,18)(6,41)(6,77)(7,13)(9,13)(10,17)(11,16)(12,19)(28,10)(41,8)(50,18)(50,44)(51,18)(57,9)(62,9)(70,10)(80,16)(99,8)(103,9)
1 (38,17)(100,67)
256 (6,27)(6,54)(6,69)(6,88)(7,17)(12,12)(18,13)
9 (42,20)
99999 (50,32)
; (6,92)(7,14)(7,20)(9,15)(10,19)(11,18)(12,20)(17,13)(18,17)(19,22)(20,37)(22,16)(23,26)(27,20)(28,11)(34,37)(35,36)(36,8)(38,18)(40,28)(41,9)(41,23)(43,67)(45,68)(50,45)(51,19)(52,19)(53,29)(54,27)(57,10)(57,22)(58,28)(62,10)(62,22)(64,28)(65,52)(67,24)(68,18)(68,30)(70,11)(70,23)(74,32)(75,16)(78,48)(79,57)(81,22)(83,32)(84,54)(86,31)(91,30)(92,34)(96,13)(97,42)(98,67)(99,9)(99,21)(100,80)(101,15)(102,15)(103,10)
< (1,9)(2,9)(7,16)(41,12)(57,12)(62,12)(68,20)(70,13)(80,15)(99,11)
= (6,16)(6,40)(6,76)(7,12)(9,12)(10,16)(11,15)(12,17)(23,8)(38,13)(41,7)(50,17)(50,30)(50,43)(51,16)(52,13)(57,8)(58,14)(62,8)(64,14)(65,22)(68,8)(70,9)(74,19)(75,12)(78,18)(79,13)(84,20)(86,14)(91,10)(97,11)(99,7)
== (25,11)
> (1,17)(2,20)(42,19)(72,18)
>= (55,18)
FILE (17,2)(96,2)
NULL (25,13)
[ (6,26)(6,53)(6,68)(6,87)(9,9)(10,13)(11,12)(12,11)(18,12)(34,33)(35,32)(42,16)(43,50)(43,63)(45,51)(45,64)(58,10)(58,25)(64,10)(64,25)(65,18)(65,33)(65,49)(72,28)(74,29)(78,10)(78,29)(78,41)(79,34)(79,54)(84,12)(84,32)(84,46)(86,24)(100,75)
] (6,30)(6,57)(6,72)(6,91)(9,11)(10,15)(11,14)(12,15)(18,16)(34,35)(35,34)(42,18)(43,52)(43,65)(45,53)(45,66)(58,12)(58,27)(64,12)(64,27)(65,20)(65,35)(65,51)(72,30)(74,31)(78,16)(78,31)(78,47)(79,40)(79,56)(84,18)(84,34)(84,52)(86,30)(100,77)
allPerson (6,6)(38,3)(41,14)(55,21)(57,13)(68,21)(91,21)
arriveTime (6,43)(10,3)(34,23)(42,6)(43,40)(45,41)(65,39)(79,44)
average (51,8)(91,2)(92,26)(98,59)
bool (52,2)
char (18,2)
else (30,2)(44,3)(60,2)(82,4)
fclose (101,2)(102,2)
feof (32,11)
file1 (17,8)(23,2)(25,6)(32,16)(34,11)(35,11)(101,9)
file2 (96,8)(97,5)(98,10)(100,11)(102,9)
first (52,7)
float (51,2)
fopen (23,10)(97,13)
for (7,2)(41,2)(57,3)(62,3)(68,3)(70,4)(99,2)
fprintf (98,2)(100,3)
fscanf (34,4)(35,4)
gets (22,5)
h (1,16)(2,19)
i (6,75)(34,34)(35,33)(36,4)(38,15)(41,6)(41,10)(41,24)(42,17)(43,51)(43,64)(45,52)(45,65)(57,7)(57,11)(57,23)(58,11)(58,26)(62,7)(62,11)(62,23)(64,11)(64,26)(65,19)(65,34)(65,50)(70,8)(70,12)(70,24)(72,29)(74,30)(75,14)(99,6)(99,10)(99,22)(100,65)(100,76)
if (25,2)(42,3)(55,5)(72,5)(80,4)
include (1,2)(2,2)
int (4,1)(6,2)(7,7)(50,2)
iostream (2,10)
j (50,16)(68,7)(68,19)(68,31)(78,30)(79,55)(84,33)
k (7,11)(7,15)(7,21)(9,10)(10,14)(11,13)
leftTime (6,79)(12,3)(65,10)(72,20)(74,21)(79,26)(84,4)(84,38)(86,16)
main (4,5)
minOk (50,38)(75,6)(78,11)(78,42)(79,35)(84,13)(84,47)(86,25)
minOkTime (50,20)(72,8)(74,9)(86,4)
name1 (18,7)(22,10)(23,16)
printf (19,2)(20,2)(27,3)(40,3)(43,4)(45,4)(53,5)(67,3)(81,5)(83,5)(92,2)
return (28,3)(103,2)
scanf (54,5)
spendTime (6,59)(11,3)(35,23)(43,54)(45,55)(58,16)(64,16)(65,24)(78,20)(84,23)
stdio (1,10)
teller (6,20)(9,3)(58,4)(64,4)(78,4)(78,35)(100,69)
tellerNum (50,6)(54,17)(55,8)(62,13)(68,9)(70,14)(99,12)
true (52,15)
waitTime (6,32)(79,4)(79,15)(80,7)(83,23)(91,12)
while (32,3)
{ (5,1)(8,2)(26,2)(31,2)(33,3)(56,2)(61,2)(63,3)(69,3)(71,4)(73,5)
} (13,2)(29,2)(37,3)(39,2)(59,2)(66,3)(76,5)(77,4)(87,3)(90,2)(105,1)

請輸入指令 : 
1.總共有多少種 token
2.三種case各有多少 token
3.印出指定 token 的位置 (line number,column number) (要排序)
4.印出所指定的那一 line 出現哪些 token (要排序)
5.結束

總共86種

Case1 共 42個
Case2 共 22個
Case3 共 22個

請輸入要搜尋的 token : 
printf (19,2)(20,2)(27,3)(40,3)(43,4)(45,4)(53,5)(67,3)(81,5)(83,5)(92,2)

請輸入要指定的 line : 
0
;
=
[
]
k
teller
byebye