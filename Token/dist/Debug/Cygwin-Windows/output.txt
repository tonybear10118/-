!= (63,31)(69,31)(76,36)
"%s" (43,9)
"Lexical_Analysis.h" (6,10)
"Systax_Analysis.h" (7,10)
"Table6 :\n" (47,16)
"\0" (63,25)(69,25)(76,30)
"\n     name    subroutine type   pointer\n" (74,10)
"\n %s" (50,18)(58,12)
"\n%2d : %d" (82,12)
"\n%2d : %s" (64,14)(70,14)
"\n%d : %s  \t  %d   \t %d    \t  %d" (77,14)
"\n======================= END ======================\n" (84,10)
"\nOutput File Name : " (42,10)
"\nPress any character>" (31,10)
"\nTable 3 : \n" (61,10)
"\nTable 4 : \n" (67,10)
"\nTable 5 : \n" (73,10)
"\nTable 6 : \n" (56,10)
"\nTable 7 : \n" (80,10)
"\n\n==================================================\n" (59,10)(65,10)(71,10)(78,10)
"w" (45,31)
# (1,1)(2,1)(3,1)(4,1)(5,1)(6,1)(7,1)
& (32,9)
( (10,12)(19,9)(21,19)(23,18)(25,9)(30,9)(31,9)(32,8)(38,12)(42,9)(43,8)(45,21)(47,10)(49,6)(50,12)(52,9)(56,9)(57,6)(58,11)(59,9)(61,9)(62,6)(63,7)(63,14)(64,13)(65,9)(67,9)(68,6)(69,7)(69,14)(70,13)(71,9)(73,9)(74,9)(75,6)(76,7)(76,14)(77,13)(78,9)(80,9)(81,6)(82,11)(84,9)
) (10,13)(19,31)(21,20)(23,19)(25,10)(30,15)(31,34)(32,14)(38,13)(42,33)(43,22)(45,34)(47,28)(49,39)(50,35)(52,14)(56,26)(57,39)(58,29)(59,68)(61,26)(62,28)(63,29)(63,35)(64,38)(65,68)(67,26)(68,28)(69,29)(69,35)(70,38)(71,68)(73,26)(74,54)(75,28)(76,34)(76,40)(77,122)(78,68)(80,26)(81,40)(82,36)(84,66)
* (19,23)(45,8)
++ (49,37)(57,37)(62,26)(68,26)(75,26)(81,38)
, (19,18)(43,13)(45,30)(47,15)(50,17)(50,25)(58,19)(63,24)(64,26)(64,28)(69,24)(70,26)(70,28)(76,29)(77,51)(77,53)(77,68)(77,89)(77,104)(82,24)(82,26)
. (1,16)(2,19)(3,17)(4,17)(5,16)(76,24)(77,63)(77,78)(77,99)(77,114)
0 (33,10)(62,15)(63,34)(68,15)(69,34)(75,15)(76,39)
1 (49,15)(57,15)(81,15)
100 (62,21)(68,21)(75,21)
; (10,14)(21,21)(23,20)(25,11)(29,12)(30,16)(31,35)(32,15)(33,11)(40,18)(42,34)(43,23)(45,35)(47,29)(49,16)(49,35)(50,36)(52,15)(56,27)(57,16)(57,35)(58,30)(59,69)(61,27)(62,16)(62,24)(64,39)(65,69)(67,27)(68,16)(68,24)(70,39)(71,69)(73,27)(74,55)(75,16)(75,24)(77,123)(78,69)(80,27)(81,16)(81,36)(82,37)(84,67)
< (1,10)(2,10)(3,10)(4,10)(5,10)(49,19)(57,19)(62,19)(68,19)(75,19)
<= (81,19)
= (45,14)(49,13)(57,13)(62,13)(68,13)(75,13)(81,13)
> (1,18)(2,21)(3,19)(4,19)(5,18)
FILE (45,3)
Lexical_Analysis (21,3)
Output (10,6)(25,3)(38,6)
Str100 (40,3)
Systax_Analysis (23,3)
[ (19,29)(50,32)(58,26)(63,21)(64,35)(69,21)(70,35)(76,21)(77,60)(77,75)(77,96)(77,111)(82,33)
] (19,30)(50,34)(58,28)(63,23)(64,37)(69,23)(70,37)(76,23)(77,62)(77,77)(77,98)(77,113)(82,35)
a (57,11)(57,17)(57,36)(58,27)
amountOfTable6 (49,21)(57,21)
amountOfTable7 (81,22)
argc (19,14)
argv (19,25)
b (62,11)(62,17)(62,25)(63,22)(64,27)(64,36)
c (68,11)(68,17)(68,25)(69,22)(70,27)(70,36)
char (19,19)(29,3)
ctype (5,11)
done (29,8)(32,10)
fclose (52,3)
fflush (30,3)
fileName (40,10)(43,14)(45,22)
fopen (45,16)
for (49,3)(57,3)(62,3)(68,3)(75,3)(81,3)
fprintf (47,3)(50,5)
fptr (45,9)(47,11)(50,13)(52,10)
h (1,17)(2,20)(3,18)(4,18)(5,17)
i (75,11)(75,17)(75,25)(76,22)(77,52)(77,61)(77,76)(77,97)(77,112)
if (63,5)(69,5)(76,5)
include (1,2)(2,2)(3,2)(4,2)(5,2)(6,2)(7,2)
int (19,1)(19,10)(49,7)(57,7)(62,7)(68,7)(75,7)(81,7)
iostream (2,11)
j (81,11)(81,17)(81,37)(82,25)(82,34)
main (19,5)
name (76,25)(77,64)
pointer (77,115)
printf (31,3)(42,3)(56,3)(58,5)(59,3)(61,3)(64,7)(65,3)(67,3)(70,7)(71,3)(73,3)(74,3)(77,7)(78,3)(80,3)(82,5)(84,3)
return (33,3)
scanf (32,3)(43,3)
stdin (30,10)
stdio (1,11)
stdlib (3,11)
strcmp (63,8)(69,8)(76,8)
string (4,11)
subroutine (77,79)
table3 (63,15)(64,29)
table4 (69,15)(70,29)
table5 (76,15)(77,54)(77,69)(77,90)(77,105)
table6 (50,26)(58,20)
table7 (82,27)
type (77,100)
void (10,1)(38,1)
x (49,11)(49,17)(49,36)(50,33)
{ (19,32)(39,1)
} (35,1)(86,1)
請輸入指令
1.總共有多少種 token
2.三種case各有多少 token
3.印出指定 token 的位置 (line number,column number) (要排序)
4.印出所指定的那一 line 出現哪幾個 token (要排序)
5.結束
總共90種
Case1 共    49個
Case2 共    23個
Case3 共    18個
請輸入要搜尋的 Token : 
printf (31,3)(42,3)(56,3)(58,5)(59,3)(61,3)(64,7)(65,3)(67,3)(70,7)(71,3)(73,3)(74,3)(77,7)(78,3)(80,3)(82,5)(84,3)
請輸入要搜尋的 Token : 
查無此Token: END
請輸入要指定的 line :
(
)
;
Output
void
byebye